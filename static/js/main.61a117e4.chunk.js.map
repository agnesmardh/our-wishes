{"version":3,"sources":["wishlists/components/Wishlist.tsx","wishlists/components/Wishlists.tsx","wishlists/components/Wish.tsx","common/axios.ts","hooks/UseWishlists.tsx","hooks/UseGet.tsx","wishlists/WishlistsContainer.tsx","home/Header.tsx","home/HomeContainer.tsx","login/LoginForm.tsx","login/LoginContainer.tsx","App.tsx","index.tsx"],"names":["Wishlist","wishlist","active","onClick","ListGroup","Item","role","Row","Col","title","WishlistOwner","owner","styled","Wishlists","wishlists","activeWishlist","setActiveWishlist","wishlistTags","map","id","createWishlist","Wish","wish","axios","defaultAxios","create","baseURL","process","requestHandler","request","a","Auth","currentSession","session","accessToken","getAccessToken","headers","Authorization","getJwtToken","interceptors","use","useWishlists","path","useState","data","setData","useEffect","get","response","fetchData","useGet","WishlistsContainer","undefined","find","wishes","Header","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Nav","className","Form","inline","Button","variant","signOut","HomeContainer","Container","fluid","LoginForm","handleLogin","loading","errorMessage","username","setUsername","password","setPassword","validated","setValidated","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","CenteredSpinner","Spinner","animation","Group","controlId","Label","Control","type","placeholder","required","onChange","target","value","Feedback","Text","ErrorMessage","disabled","p","div","setLoading","setErrorMessage","signIn","LoginContainer","CenteredLoginContainer","Amplify","configure","aws_cognito_region","aws_user_pools_id","aws_user_pools_web_client_id","withAuthenticator","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61a117e4.chunk.js","sourcesContent":["import React from 'react';\nimport { Col, ListGroup, Row } from 'react-bootstrap';\nimport { WishlistDTO } from '../types/WishlistDTO';\nimport styled from 'styled-components';\n\ninterface Props {\n  wishlist: WishlistDTO;\n  active: boolean;\n  onClick: () => void;\n}\n\nexport const Wishlist: React.FC<Props> = ({ wishlist, active, onClick }: Props) => {\n  return (\n    <ListGroup.Item role={'button'} active={active} onClick={onClick}>\n      <Row>\n        <Col>{wishlist.title}</Col>\n        <WishlistOwner>{wishlist.owner}</WishlistOwner>\n      </Row>\n    </ListGroup.Item>\n  );\n};\n\nconst WishlistOwner = styled(Col)`\n  text-align: right;\n  justify-content: center;\n  align-self: center;\n  font-size: 8pt;\n  font-style: italic;\n`;\n","import React from 'react';\nimport { WishlistDTO } from '../types/WishlistDTO';\nimport { Wishlist } from './Wishlist';\nimport { ListGroup } from 'react-bootstrap';\n\ninterface Props {\n  wishlists: WishlistDTO[];\n  activeWishlist: string | undefined;\n  setActiveWishlist: (value: string) => void;\n}\n\nconst createWishlist = (\n  wishlist: WishlistDTO,\n  activeWishlist: string | undefined,\n  setActiveWishlist: (value: string) => void\n) => {\n  return (\n    <Wishlist\n      key={wishlist.id}\n      wishlist={wishlist}\n      active={activeWishlist === wishlist.id}\n      onClick={() => setActiveWishlist(wishlist.id)}\n    />\n  );\n};\n\nexport const Wishlists: React.FC<Props> = ({ wishlists, activeWishlist, setActiveWishlist }: Props) => {\n  const wishlistTags = wishlists.map(wishlist => createWishlist(wishlist, activeWishlist, setActiveWishlist));\n  return (\n    <ListGroup>\n      <div>Wishlists:</div>\n      {wishlistTags}\n    </ListGroup>\n  );\n};\n","import React from 'react';\nimport { WishDTO } from '../types/WishDTO';\n\ninterface Props {\n  wish: WishDTO;\n}\n\nexport const Wish: React.FC<Props> = ({ wish }: Props) => {\n  return <div>Wish: {wish.title}</div>;\n};\n","import defaultAxios, { AxiosRequestConfig } from 'axios';\nimport { Auth } from 'aws-amplify';\n\nconst axios = defaultAxios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL\n});\n\nconst requestHandler = async (request: AxiosRequestConfig) => {\n  const session = await Auth.currentSession();\n  const accessToken = session.getAccessToken();\n  request.headers.Authorization = `Bearer ${accessToken.getJwtToken()}`;\n\n  return request;\n};\n\naxios.interceptors.request.use(request => requestHandler(request));\n\nexport default axios;\n","import { WishlistDTO } from '../wishlists/types/WishlistDTO';\nimport { useGet } from './UseGet';\n\nexport const useWishlists = (): WishlistDTO[] | null => {\n  return useGet<WishlistDTO[]>('Wishlist');\n};\n","import { useEffect, useState } from 'react';\nimport axios from '../common/axios';\n\nexport const useGet = <T,>(path: string): T | null => {\n  const [data, setData] = useState<T | null>(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(path);\n      setData(response.data);\n    };\n    fetchData();\n  }, [path]);\n  return data;\n};\n","import React, { useState } from 'react';\nimport { Wishlists } from './components/Wishlists';\nimport { Col, Row } from 'react-bootstrap';\nimport { Wish } from './components/Wish';\nimport { useWishlists } from '../hooks/UseWishlists';\n\nexport const WishlistsContainer: React.FC = () => {\n  const wishlists = useWishlists();\n  const [activeWishlist, setActiveWishlist] = useState(!wishlists ? undefined : wishlists[0].id);\n\n  if (!wishlists) {\n    return <div>Loading...</div>;\n  }\n\n  const active = wishlists.find(wishlist => wishlist.id === activeWishlist);\n\n  const wishes = active?.wishes.map(wish => <Wish key={wish.id} wish={wish} />);\n\n  return (\n    <Row>\n      <Col>\n        <Wishlists wishlists={wishlists} activeWishlist={activeWishlist} setActiveWishlist={setActiveWishlist} />\n      </Col>\n      <Col>\n        List of Wishes\n        {wishes}\n      </Col>\n      <Col>Management of Wishlists</Col>\n    </Row>\n  );\n};\n","import React from 'react';\nimport { Button, Form, Nav, Navbar } from 'react-bootstrap';\nimport { Auth } from 'aws-amplify';\n\nexport const Header: React.FC = () => {\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand href=\"#home\">Our Wishes</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Nav className=\"mr-auto\" />\n      <Form inline>\n        <Button variant=\"outline-success\" onClick={async () => await Auth.signOut()}>\n          Sign out\n        </Button>\n      </Form>\n    </Navbar>\n  );\n};\n","import React from 'react';\nimport { WishlistsContainer } from '../wishlists/WishlistsContainer';\nimport { Header } from './Header';\nimport { Col, Container, Row } from 'react-bootstrap';\n\nexport const HomeContainer: React.FC = () => {\n  return (\n    <Container fluid>\n      <Row>\n        <Col>\n          <Header />\n          <WishlistsContainer />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","import { Button, Form, Spinner } from 'react-bootstrap';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  handleLogin: (username: string, password: string) => void;\n  loading: boolean;\n  errorMessage: string;\n}\n\nexport const LoginForm: React.FC<Props> = ({ handleLogin, loading, errorMessage }: Props) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [validated, setValidated] = useState(false);\n\n  return (\n    <Form\n      noValidate\n      validated={validated}\n      onSubmit={event => {\n        setValidated(false);\n        if (!event.currentTarget.checkValidity()) {\n          event.preventDefault();\n          event.stopPropagation();\n          setValidated(true);\n        } else {\n          handleLogin(username, password);\n          event.preventDefault();\n        }\n      }}\n    >\n      {loading && (\n        <CenteredSpinner>\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </Spinner>\n        </CenteredSpinner>\n      )}\n      <Form.Group controlId=\"formBasicUsername\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control\n          type=\"username\"\n          placeholder=\"Enter username\"\n          required\n          onChange={event => setUsername(event.target.value)}\n        />\n        <Form.Control.Feedback type=\"invalid\">Please provide a username.</Form.Control.Feedback>\n        <Form.Text className=\"text-muted\">Use the username you chose during the signup process.</Form.Text>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          onChange={event => setPassword(event.target.value)}\n        />\n        <Form.Control.Feedback type=\"invalid\">Please provide a password</Form.Control.Feedback>\n      </Form.Group>\n      {errorMessage && !loading && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      <Button variant=\"primary\" type=\"submit\" disabled={loading}>\n        Login\n      </Button>\n    </Form>\n  );\n};\n\nconst ErrorMessage = styled.p`\n  color: red;\n`;\n\nconst CenteredSpinner = styled.div`\n  position: absolute;\n  top: 35%;\n  left: 50%;\n  opacity: 0.5;\n  transform: translate(-50%, -50%);\n`;\n","import React, { useState } from 'react';\nimport { LoginForm } from './LoginForm';\nimport styled from 'styled-components';\nimport { Auth } from 'aws-amplify';\n\nconst handleLogin = async (\n  username: string,\n  password: string,\n  setLoading: (loading: boolean) => void,\n  setErrorMessage: (value: string) => void\n) => {\n  setLoading(true);\n  try {\n    await Auth.signIn(username, password);\n    setLoading(false);\n  } catch (error) {\n    setLoading(false);\n    setErrorMessage('Incorrect username or password.');\n  }\n};\n\nexport const LoginContainer: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  return (\n    <CenteredLoginContainer>\n      <LoginForm\n        handleLogin={(username, password) => handleLogin(username, password, setLoading, setErrorMessage)}\n        loading={loading}\n        errorMessage={errorMessage}\n      />\n    </CenteredLoginContainer>\n  );\n};\n\nconst CenteredLoginContainer = styled.div`\n  margin: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  width: 50%;\n  height: 50%;\n  min-width: 200px;\n  max-width: 400px;\n  padding: 40px;\n`;\n","import React from 'react';\nimport { Amplify } from 'aws-amplify';\nimport { HomeContainer } from './home/HomeContainer';\nimport {\n  ConfirmSignIn,\n  ConfirmSignUp,\n  ForgotPassword,\n  RequireNewPassword,\n  SignUp,\n  VerifyContact,\n  withAuthenticator\n} from 'aws-amplify-react';\n\nimport { LoginContainer } from './login/LoginContainer';\n\nAmplify.configure({\n  aws_cognito_region: process.env.REACT_APP_COGNITO_REGION,\n  aws_user_pools_id: process.env.REACT_APP_COGNITO_USER_POOL_ID,\n  aws_user_pools_web_client_id: process.env.REACT_APP_COGNITO_APP_CLIENT_ID\n});\n\nconst App: React.FC = () => <HomeContainer />;\n\nexport default withAuthenticator(App, false, [\n  <LoginContainer key={1} />,\n  <ConfirmSignIn key={2} />,\n  <VerifyContact key={3} />,\n  <SignUp key={4} />,\n  <ConfirmSignUp key={5} />,\n  <ForgotPassword key={6} />,\n  <RequireNewPassword key={7} />\n]);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}